---
- name: Backup Docker service and upload to OneDrive
  hosts: localhost

  vars:
    base_dir: "/home/karsten"
    service_name: "temp_service"
    service_dir: "{{ base_dir }}/{{ service_name }}"
    backup_dir: "{{ base_dir }}/backups/{{ service_name }}_backups"
    nas_backup_dir: "/mnt/backups/{{ service_name }}"
    rclone_remote: "onedrive:{{ service_name }}_backups"
    backup_pattern: "{{ service_name }}_backup_*.tar.gz"
    compose_file: "{{ service_dir }}/docker-compose.yml"
    timestamp: "{{ ansible_date_time.iso8601_basic_short }}"
    backup_file: "{{ service_name }}_backup_{{ timestamp }}.tar.gz"
    max_local_backups: 1
    max_onedrive_backups: 7
    max_nas_backups: 30

  tasks:
    - name: Stop {{ service_name }} containers
      shell: docker-compose down
      args:
        chdir: "{{ service_dir }}"

    - name: Ensure local backup directory exists
      file:
        path: "{{ backup_dir }}"
        state: directory
        owner: karsten
        group: karsten
        mode: '0755'

    - name: Create archive of the {{ service_name }} directory
      archive:
        path: "{{ service_dir }}"
        dest: "{{ backup_dir }}/{{ backup_file }}"
        format: gz
        owner: karsten
        group: karsten
        mode: '0644'

    - name: Ensure SMB share backup directory exists
      file:
        path: "{{ nas_backup_dir }}"
        state: directory
        owner: karsten
        group: karsten
        mode: '0755'

    - name: Copy backup archive to SMB share
      copy:
        src: "{{ backup_dir }}/{{ backup_file }}"
        dest: "{{ nas_backup_dir }}/{{ backup_file }}"
        owner: karsten
        group: karsten
        mode: '0644'

    - name: Upload archive to OneDrive with rclone
      shell: rclone copy "{{ backup_dir }}/{{ backup_file }}" "{{ rclone_remote }}"
      args:
        executable: /bin/bash

    - name: Remove old local backups (keep only latest)
      shell: |
        find {{ backup_dir }} -maxdepth 1 -type f -name '{{ backup_pattern }}' -printf '%T@ %p\n' | sort -nr | tail -n +2 | cut -d' ' -f2- | xargs -r rm --

      args:
        executable: /bin/bash

    - name: Remove old nas backups (keep latest {{ max_nas_backups }})
      shell: |
        ls -1t {{ nas_backup_dir }}/{{ backup_pattern }} | tail -n +{{ max_nas_backups + 1 }} | xargs -r rm --
      args:
        executable: /bin/bash

    - name: Remove old OneDrive backups (keep latest {{ max_onedrive_backups }})
      shell: |
        rclone lsf --format t "{{ rclone_remote }}" | grep '^{{ service_name }}_backup_.*\.tar\.gz$' | sort -r | tail -n +{{ max_onedrive_backups + 1 }} | while read file; do
          rclone delete "{{ rclone_remote }}/$file"
        done
      args:
        executable: /bin/bash

    - name: Start {{ service_name }} containers
      shell: docker-compose up -d
      args:
        chdir: "{{ service_dir }}"
