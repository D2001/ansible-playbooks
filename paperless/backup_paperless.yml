---
- name: Backup Paperless-ngx and upload to OneDrive
  hosts: localhost
  become: yes

  vars:
    paperless_dir: /home/karsten/paperless
    backup_dir: /home/karsten/backups/paperless_backups
    timestamp: "{{ ansible_date_time.iso8601_basic_short }}"
    backup_file: "paperless_backup_{{ timestamp }}.tar.gz"
    rclone_remote: "onedrive:paperless_backups"
    nas_backup_dir: "/mnt/backups/paperless"
    max_local_backups: 1
    max_onedrive_backups: 7  
    max_nas_backups: 30
    # Docker volumes to backup
    docker_volumes:
      - paperless_paperless_data
      - paperless_paperless_media
      - paperless_paperless_pgdata
      - paperless_paperless_redis
      - paperless_paperless_export

  tasks:
    - name: Stop Paperless-ngx containers
      become_user: karsten
      shell: docker-compose down
      args:
        chdir: "{{ paperless_dir }}"

    - name: Ensure local backup directory exists
      file:
        path: "{{ backup_dir }}"
        state: directory
        owner: karsten
        group: karsten
        mode: '0755'

    - name: Create temporary directory for volume backups
      tempfile:
        state: directory
        suffix: _paperless_backup
      register: temp_backup_dir

    - name: Backup Docker volumes
      shell: |
        docker run --rm \
          -v {{ item }}:/volume \
          -v {{ temp_backup_dir.path }}:/backup \
          alpine:latest \
          tar czf /backup/{{ item }}.tar.gz -C /volume .
      loop: "{{ docker_volumes }}"
      become_user: karsten

    - name: Create combined archive with config and volume data
      shell: |
        cd {{ temp_backup_dir.path }}
        tar czf "{{ backup_dir }}/{{ backup_file }}" \
          -C "{{ paperless_dir }}" docker-compose.yml .env \
          -C {{ temp_backup_dir.path }} *.tar.gz
      become_user: karsten

    - name: Ensure SMB share backup directory exists
      file:
        path: "{{ nas_backup_dir }}"
        state: directory
        owner: karsten
        group: karsten
        mode: '0755'

    - name: Copy backup archive to SMB share
      become_user: karsten
      copy:
        src: "{{ backup_dir }}/{{ backup_file }}"
        dest: "{{ nas_backup_dir }}/{{ backup_file }}"
        owner: karsten
        group: karsten
        mode: '0644'

    - name: Upload archive to OneDrive with rclone
      become_user: karsten
      shell: rclone copy "{{ backup_dir }}/{{ backup_file }}" "{{ rclone_remote }}"
      args:
        executable: /bin/bash

    - name: Clean up temporary backup directory
      file:
        path: "{{ temp_backup_dir.path }}"
        state: absent

    - name: Remove old local backups (keep latest {{ max_local_backups }})
      become_user: karsten
      shell: |
        find {{ backup_dir }} -maxdepth 1 -type f -name 'paperless_backup_*.tar.gz' -printf '%T@ %p\n' | sort -nr | tail -n +{{ max_local_backups + 1 }} | cut -d' ' -f2- | xargs -r rm --
      args:
        executable: /bin/bash

    - name: Remove old nas backups (keep latest {{ max_nas_backups }})
      become_user: karsten
      shell: |
        ls -1t {{ nas_backup_dir }}/paperless_backup_*.tar.gz | tail -n +{{ max_nas_backups + 1 }} | xargs -r rm --
      args:
        executable: /bin/bash

    - name: Remove old OneDrive backups (keep latest {{ max_onedrive_backups }})
      become_user: karsten
      shell: |
        rclone lsf --format t "{{ rclone_remote }}" | grep '^paperless_backup_.*\.tar\.gz$' | sort -r | tail -n +{{ max_onedrive_backups + 1 }} | while read file; do
          rclone delete "{{ rclone_remote }}/$file"
        done
      args:
        executable: /bin/bash

    - name: Start Paperless-ngx containers
      become_user: karsten
      shell: docker-compose up -d
      args:
        chdir: "{{ paperless_dir }}"
